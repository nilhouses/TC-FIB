Non-ambiguous CFG for the well-parenthesized words over {(,)}{(,)}
Write a non-ambiguous CFG generating the language of the well-parenthesized 
words over {(,)}{(,)}. For example, ()(())()(()) and (((()())))(((()()))) are 
well-parenthesized words, whereas )()( and (()(() are not. One way to define 
more precisely this language is to describe it as the set of words that can be 
reduced to the empty word by successive applications of the rewrite rule ()→λ()→λ.


f(i) ) #(-#) Haurà de ser >= 0 sempre i 0 al acabar Per fer-ho no ambigu caldrà forçar 
a dividir la gramàtica  en subparaules que acaben en 0.  algo tipo S -> "compleix propietat"S

		S -> (S)S | 

Podem veure com es compleix la propietat i es poden posar infinits (algo)(algo)....
